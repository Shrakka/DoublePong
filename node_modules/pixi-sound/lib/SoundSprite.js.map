{"version":3,"file":"SoundSprite.js","sourceRoot":"","sources":["../src/SoundSprite.ts"],"names":[],"mappings":";;AAqBA;IA6CI,qBAAY,MAAa,EAAE,OAAwB;QAE/C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QAGtC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,mCAAmC,CAAC,CAAC;IAE3E,CAAC;IAQM,0BAAI,GAAX,UAAY,QAA2B;QAEnC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAClC,QAAQ,UAAA;YACR,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK;YACtC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,CAAC,CAAC,CAAC;IACR,CAAC;IAMM,6BAAO,GAAd;QAEI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IACL,kBAAC;AAAD,CAAC,AAhFD,IAgFC","sourcesContent":["import Sound from \"./Sound\";\nimport {CompleteCallback} from \"./Sound\";\nimport SoundInstance from \"./SoundInstance\";\n\nexport interface SoundSpriteData {\n    start: number;\n    end: number;\n    speed?: number;\n}\n\n/**\n * Object that represents a single Sound's sprite.\n * @class SoundSprite\n * @memberof PIXI.sound\n * @param {PIXI.sound.Sound} parent The parent sound\n * @param {Object} options Data associated with object.\n * @param {Number} options.start The start time in seconds.\n * @param {Number} options.end The end time in seconds.\n * @param {Number} [options.speed] The optional speed, if not speed, uses\n *        the default speed of the parent.\n */\nexport default class SoundSprite\n{\n    /**\n     * The reference sound\n     * @name PIXI.sound.SoundSprite#parent\n     * @type {PIXI.sound.Sound}\n     * @readOnly\n     */\n    public parent: Sound;\n\n    /**\n     * The starting location in seconds.\n     * @name PIXI.sound.SoundSprite#start\n     * @type {Number}\n     * @readOnly\n     */\n    public start: number;\n\n    /**\n     * The ending location in seconds\n     * @name PIXI.sound.SoundSprite#end\n     * @type {Number}\n     * @readOnly\n     */\n    public end: number;\n\n    /**\n     * The speed override where 1 is 100% speed playback.\n     * @name PIXI.sound.SoundSprite#speed\n     * @type {Number}\n     * @readOnly\n     */\n    public speed: number;\n\n    /**\n     * The duration of the sound in seconds.\n     * @name PIXI.sound.SoundSprite#duration\n     * @type {Number}\n     * @readOnly\n     */\n    public duration: number;\n\n    /**\n     * Constructor\n     */\n    constructor(parent: Sound, options: SoundSpriteData)\n    {\n        this.parent = parent;\n        Object.assign(this, options);\n        this.duration = this.end - this.start;\n\n        // @if DEBUG\n        console.assert(this.duration > 0, \"End time must be after start time\");\n        // @endif\n    }\n\n    /**\n     * Play the sound sprite.\n     * @method PIXI.sound.SoundSprite#play\n     * @param {PIXI.sound.Sound~completeCallback} [complete] Function call when complete\n     * @return {PIXI.sound.SoundInstance|Promise<PIXI.sound.SoundInstance>} Sound instance being played.\n     */\n    public play(complete?: CompleteCallback): SoundInstance|Promise<SoundInstance>\n    {\n        return this.parent.play(Object.assign({\n            complete,\n            speed: this.speed || this.parent.speed,\n            end: this.end,\n            start: this.start,\n        }));\n    }\n\n    /**\n     * Destroy and don't use after this\n     * @method PIXI.sound.SoundSprite#destroy\n     */\n    public destroy(): void\n    {\n        this.parent = null;\n    }\n}\n"]}